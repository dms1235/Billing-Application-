// <auto-generated />
using System;
using DataAccess.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entity.Entities.Invoice.InvoiceDetails", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created_On");

                    b.Property<decimal>("DiscAmt")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DiscAmt");

                    b.Property<decimal>("GrossAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("GrossAmount");

                    b.Property<Guid>("InvoiceMasterID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InvoiceMasterID");

                    b.Property<decimal>("ItemAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ItemAmount");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ItemCode");

                    b.Property<Guid>("ItemID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ItemID");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ItemName");

                    b.Property<int>("ItemQty")
                        .HasColumnType("int")
                        .HasColumnName("ItemQty");

                    b.Property<decimal>("ItemRate")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ItemRate");

                    b.Property<decimal>("ItemWiseAmout")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ItemWiseAmout");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("NetAmount");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Updated_By");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Updated_On");

                    b.HasKey("ID");

                    b.HasIndex("InvoiceMasterID");

                    b.ToTable("Invoice_Details");
                });

            modelBuilder.Entity("Entity.Entities.Invoice.InvoiceMaster", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("BillToAddress1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BillToAddress1");

                    b.Property<string>("BillToAddress2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BillToAddress2");

                    b.Property<string>("BillToAddress3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BillToAddress3");

                    b.Property<string>("BillToAddress4")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BillToAddress4");

                    b.Property<string>("BillToCompanyName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BillToCompanyName");

                    b.Property<string>("BillToGSTNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BillToGSTNo");

                    b.Property<string>("ConsigneAddress1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ConsigneAddress1");

                    b.Property<string>("ConsigneAddress2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ConsigneAddress2");

                    b.Property<string>("ConsigneAddress3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ConsigneAddress3");

                    b.Property<string>("ConsigneAddress4")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ConsigneAddress4");

                    b.Property<string>("ConsigneCompanyName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ConsigneCompanyName");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created_On");

                    b.Property<string>("DeliveryNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DeliveryNote");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Invoice_Date");

                    b.Property<long>("InvoiceNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Invoice_Number")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("LRNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LRNo");

                    b.Property<string>("ModeOfTransport")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ModeOfTransport");

                    b.Property<DateTime?>("PODate")
                        .HasColumnType("datetime2")
                        .HasColumnName("PODate");

                    b.Property<long?>("PONumber")
                        .HasColumnType("bigint")
                        .HasColumnName("PONumber");

                    b.Property<string>("PlaceOfSupply")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PlaceOfSupply");

                    b.Property<DateTime?>("SupplyDateandTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("SupplyDateandTime");

                    b.Property<string>("Transpoter")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Transpoter");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Updated_By");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Updated_On");

                    b.Property<string>("VendorCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VendorCode");

                    b.HasKey("ID");

                    b.ToTable("Invoice_Masters");
                });

            modelBuilder.Entity("Entity.Entities.Masters.ItemMasters", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created_On");

                    b.Property<decimal>("GSTRate")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("GST_Rate");

                    b.Property<string>("HSNCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HSN_Code");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Active");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Item_Code");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Item_Name");

                    b.Property<decimal>("ItemPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Item_Price");

                    b.Property<string>("UOM")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UOM");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Updated_By");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Updated_On");

                    b.HasKey("ID");

                    b.ToTable("Item_Masters");
                });

            modelBuilder.Entity("Entity.Entities.Security.UserEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created_On");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Active");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Mobile_Number");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Password");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Updated_By");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Updated_On");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Username");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entity.Entities.Invoice.InvoiceDetails", b =>
                {
                    b.HasOne("Entity.Entities.Invoice.InvoiceMaster", "InvoiceMaster")
                        .WithMany()
                        .HasForeignKey("InvoiceMasterID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("InvoiceMaster");
                });
#pragma warning restore 612, 618
        }
    }
}
